name: Python

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  linters:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Update pip
        run: python -m pip install -U pip

      - name: Install dependencies
        run: python -m pip install mypy flake8 autopep8 numpy pytest ray

      - name: MyPy
        run: mypy .

      - name: Lint
        run: |
          flake8
          autopep8 --diff -r python/

  unit-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { python: "3.8", os: ubuntu-20.04 }
          - { python: "3.9", os: ubuntu-20.04 }
          - { python: "3.10", os: ubuntu-20.04 }

    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Update pip
        run: python -m pip install -U pip

      - name: Install dependencies
        run: python -m pip install maturin pytest pytest-cov

      - name: Maturin build
        run: |
          maturin build -o dist --interpreter ${{ matrix.python }}
          pip install dist/*.whl

      - name: Pytest
        run: pytest -vv --cov ./

  build-wheel:
    needs: [unit-tests, linters]

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { python: "3.8", os: ubuntu-20.04 }
          - { python: "3.9", os: ubuntu-20.04 }
          - { python: "3.10", os: ubuntu-20.04 }

    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Update pip
        run: python -m pip install -U pip

      - name: Install dependencies
        run: python -m pip install maturin

      - name: Maturin build release
        run: maturin build -o dist --interpreter ${{ matrix.python }} --release

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: PyPi publish
    runs-on: ubuntu-latest
    needs: [build-wheel]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist

      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TESTING_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
